#!/bin/zsh
#
# Only including a shebang to trigger Sublime Text to use shell syntax highlighting
#
# Copyright 2006-2015 Joseph Block <jpb@unixorn.net>
#
# BSD licensed, see LICENSE.txt

# Clone zgen if you haven't already
if [ ! -f ~/Applications/zgen/zgen.zsh ]; then
  pushd ~/Applications
  git clone https://github.com/tarjoilija/zgen.git
  popd
fi
source ~/Applications/zgen/zgen.zsh

if ! zgen saved; then
  echo "creating a zgen save"

  # If zsh-syntax-highlighting is bundled after zsh-history-substring-search,
  # they break, so get the order right.
  zgen load zsh-users/zsh-syntax-highlighting
  zgen load zsh-users/zsh-history-substring-search

  # Set keystrokes for substring searching
  zmodload zsh/terminfo
  bindkey "$terminfo[kcuu1]" history-substring-search-up
  bindkey "$terminfo[kcud1]" history-substring-search-down

  # Warn you when you run a command that you've got an alias for
  zgen load djui/alias-tips

  # Tom Limoncelli's tooling for storing private information (keys, etc)
  # in a repository securely by encrypting them with gnupg
  zgen load StackExchange/blackbox

  zgen load chrissicool/zsh-256color

  # Very cool plugin that generates zsh completion functions for commands
  # if they have getopt-style help text.
  zgen load RobSis/zsh-completion-generator

  # k is a zsh script / plugin to make directory listings more readable,
  # adding a bit of color and some git status information on files and directories
  zgen load rimraf/k

  # Load more completion files for zsh from the zsh-lovers github repo
  zgen load zsh-users/zsh-completions src

  # Bullet train prompt setup
  zgen load caiogondim/bullet-train-oh-my-zsh-theme bullet-train

  # Save it all to init script
  zgen save
fi


# This comes from https://stackoverflow.com/questions/17878684/best-way-to-get-file-modified-time-in-seconds
# This works on both Linux with GNU fileutils and OS X with BSD stat.
get_file_modification_time() {
  modified_time=$(stat -c %Y "$1" 2> /dev/null)
  if [ "$?" -ne 0 ]; then
    modified_time=$(stat -f %m "$1" 2> /dev/null)
    if [ "$?" -ne 0 ]; then
      modified_time=$(date -r "$1" +%s 2> /dev/null)
      [ "$?" -ne 0 ] && modified_time=0
    fi
  fi
  echo "$modified_time"
}

# Our installation instructions get the user to make a symlink
# from ~/.zgen-setup to wherever they checked out the zsh-quickstart-kit
# repository. Unfortunately, stat will return the modification time of the
# symlink instead of the target file, so construct a full path to hand off
# to stat so it returns the modification time of the actual .zgen-setup file.
REAL_ZGEN_SETUP="${HOME}/$(readlink ~/.zgen-setup)"

# If you don't want my standard starter set of plugins, create .zgen-local-plugins
# and add your zgen load commands there. Don't forget to zgen save at the end,
# .zgen-local-plugins replaces the starter list setup, it doesn't add to it.
#
# Use readlink in case the user is symlinking from another repo checkout
if [ -f ~/.zgen-local-plugins ]; then
  REAL_ZGEN_SETUP="${HOME}/$(readlink ~/.zgen-local-plugins)"
fi

# If .zgen-setup is newer than init.zsh, regenerate init.zsh
if [ $(get_file_modification_time ${REAL_ZGEN_SETUP}) -gt $(get_file_modification_time ~/.zgen/init.zsh) ]; then
  echo ".zgen-setup updated; creating a new init.zsh"
  setup-zgen-repos
fi
unset REAL_ZGEN_SETUP
